#01. 그리디 - 1이 될 때까지
#실전 문제2 (page 99) 난이도 1

#어떤 수 N이 1이 될 때까지 두 과정 중 선택하여 반복
# 1.N에서 1을 빼거나
# 2.N에서 K를 나누거나
# N과 K가 주어질 때 N이 1이 될 때까지 1,2번 수행하는 최소 횟수 출력


#입력
# 공백 간격으로 N과 K 입력, N >=K
#출력
# 1,2번 과정을 반복한 최소 횟수


#2번은 조건이 나눠 떨어질 경우로 한정되어있으므로
#무조건 N에서 1을 빼며 K의 배수로 만들어야할듯 하다
#나눠떨어질 경우 나누는게 무조건 이득


N, K = map(int, input().split())
count = 0

#N이 K 이상이라면 K로 계속 나누기

while N >= K:
    #N이 K로 나누어떨어지지 않는 수라면, 계속 1을 빼기
    while N % K != 0:
        N -= 1
        count += 1 #뺄 때마다 수행횟수 +1
    N //= K #N이 K로 나누어떨어지는 수가 되면, 나누기
    count += 1
while N > 1: #마지막으로 남은 수에 대하여 1씩 빼기
    N -= 1
    count += 1

print(count)

#풀이 결과: 풀지 못함
